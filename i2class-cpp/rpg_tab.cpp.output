

Terminals which are not used:

   PROCEDURE
   DOT_IDENTIFIER


Conflict in state 12 between rule 14 and token AND resolved as reduce.
Conflict in state 12 between rule 14 and token OR resolved as reduce.
Conflict in state 12 between rule 14 and token GE resolved as reduce.
Conflict in state 12 between rule 14 and token LE resolved as reduce.
Conflict in state 12 between rule 14 and token EQUALS resolved as reduce.
Conflict in state 12 between rule 14 and token NE resolved as reduce.
Conflict in state 12 between rule 14 and token '>' resolved as reduce.
Conflict in state 12 between rule 14 and token '<' resolved as reduce.
Conflict in state 12 between rule 14 and token '+' resolved as reduce.
Conflict in state 12 between rule 14 and token '-' resolved as reduce.
Conflict in state 12 between rule 14 and token '*' resolved as reduce.
Conflict in state 12 between rule 14 and token '/' resolved as reduce.
Conflict in state 13 between rule 27 and token AND resolved as reduce.
Conflict in state 13 between rule 27 and token OR resolved as reduce.
Conflict in state 13 between rule 27 and token GE resolved as reduce.
Conflict in state 13 between rule 27 and token LE resolved as reduce.
Conflict in state 13 between rule 27 and token EQUALS resolved as reduce.
Conflict in state 13 between rule 27 and token NE resolved as reduce.
Conflict in state 13 between rule 27 and token '>' resolved as reduce.
Conflict in state 13 between rule 27 and token '<' resolved as reduce.
Conflict in state 13 between rule 27 and token '+' resolved as reduce.
Conflict in state 13 between rule 27 and token '-' resolved as reduce.
Conflict in state 13 between rule 27 and token '*' resolved as reduce.
Conflict in state 13 between rule 27 and token '/' resolved as reduce.
Conflict in state 32 between rule 4 and token '-' resolved as shift.
Conflict in state 33 between rule 26 and token AND resolved as reduce.
Conflict in state 33 between rule 26 and token OR resolved as reduce.
Conflict in state 33 between rule 26 and token GE resolved as shift.
Conflict in state 33 between rule 26 and token LE resolved as shift.
Conflict in state 33 between rule 26 and token EQUALS resolved as shift.
Conflict in state 33 between rule 26 and token NE resolved as shift.
Conflict in state 33 between rule 26 and token '>' resolved as shift.
Conflict in state 33 between rule 26 and token '<' resolved as shift.
Conflict in state 33 between rule 26 and token '+' resolved as shift.
Conflict in state 33 between rule 26 and token '-' resolved as shift.
Conflict in state 33 between rule 26 and token '*' resolved as shift.
Conflict in state 33 between rule 26 and token '/' resolved as shift.
Conflict in state 34 between rule 25 and token AND resolved as reduce.
Conflict in state 34 between rule 25 and token OR resolved as reduce.
Conflict in state 34 between rule 25 and token GE resolved as shift.
Conflict in state 34 between rule 25 and token LE resolved as shift.
Conflict in state 34 between rule 25 and token EQUALS resolved as shift.
Conflict in state 34 between rule 25 and token NE resolved as shift.
Conflict in state 34 between rule 25 and token '>' resolved as shift.
Conflict in state 34 between rule 25 and token '<' resolved as shift.
Conflict in state 34 between rule 25 and token '+' resolved as shift.
Conflict in state 34 between rule 25 and token '-' resolved as shift.
Conflict in state 34 between rule 25 and token '*' resolved as shift.
Conflict in state 34 between rule 25 and token '/' resolved as shift.
Conflict in state 35 between rule 21 and token AND resolved as reduce.
Conflict in state 35 between rule 21 and token OR resolved as reduce.
Conflict in state 35 between rule 21 and token GE resolved as reduce.
Conflict in state 35 between rule 21 and token LE resolved as reduce.
Conflict in state 35 between rule 21 and token EQUALS resolved as reduce.
Conflict in state 35 between rule 21 and token NE resolved as reduce.
Conflict in state 35 between rule 21 and token '>' resolved as reduce.
Conflict in state 35 between rule 21 and token '<' resolved as reduce.
Conflict in state 35 between rule 21 and token '+' resolved as shift.
Conflict in state 35 between rule 21 and token '-' resolved as shift.
Conflict in state 35 between rule 21 and token '*' resolved as shift.
Conflict in state 35 between rule 21 and token '/' resolved as shift.
Conflict in state 36 between rule 22 and token AND resolved as reduce.
Conflict in state 36 between rule 22 and token OR resolved as reduce.
Conflict in state 36 between rule 22 and token GE resolved as reduce.
Conflict in state 36 between rule 22 and token LE resolved as reduce.
Conflict in state 36 between rule 22 and token EQUALS resolved as reduce.
Conflict in state 36 between rule 22 and token NE resolved as reduce.
Conflict in state 36 between rule 22 and token '>' resolved as reduce.
Conflict in state 36 between rule 22 and token '<' resolved as reduce.
Conflict in state 36 between rule 22 and token '+' resolved as shift.
Conflict in state 36 between rule 22 and token '-' resolved as shift.
Conflict in state 36 between rule 22 and token '*' resolved as shift.
Conflict in state 36 between rule 22 and token '/' resolved as shift.
Conflict in state 37 between rule 24 and token AND resolved as reduce.
Conflict in state 37 between rule 24 and token OR resolved as reduce.
Conflict in state 37 between rule 24 and token GE resolved as reduce.
Conflict in state 37 between rule 24 and token LE resolved as reduce.
Conflict in state 37 between rule 24 and token EQUALS resolved as reduce.
Conflict in state 37 between rule 24 and token NE resolved as reduce.
Conflict in state 37 between rule 24 and token '>' resolved as reduce.
Conflict in state 37 between rule 24 and token '<' resolved as reduce.
Conflict in state 37 between rule 24 and token '+' resolved as shift.
Conflict in state 37 between rule 24 and token '-' resolved as shift.
Conflict in state 37 between rule 24 and token '*' resolved as shift.
Conflict in state 37 between rule 24 and token '/' resolved as shift.
Conflict in state 38 between rule 23 and token AND resolved as reduce.
Conflict in state 38 between rule 23 and token OR resolved as reduce.
Conflict in state 38 between rule 23 and token GE resolved as reduce.
Conflict in state 38 between rule 23 and token LE resolved as reduce.
Conflict in state 38 between rule 23 and token EQUALS resolved as reduce.
Conflict in state 38 between rule 23 and token NE resolved as reduce.
Conflict in state 38 between rule 23 and token '>' resolved as reduce.
Conflict in state 38 between rule 23 and token '<' resolved as reduce.
Conflict in state 38 between rule 23 and token '+' resolved as shift.
Conflict in state 38 between rule 23 and token '-' resolved as shift.
Conflict in state 38 between rule 23 and token '*' resolved as shift.
Conflict in state 38 between rule 23 and token '/' resolved as shift.
Conflict in state 39 between rule 20 and token AND resolved as reduce.
Conflict in state 39 between rule 20 and token OR resolved as reduce.
Conflict in state 39 between rule 20 and token GE resolved as reduce.
Conflict in state 39 between rule 20 and token LE resolved as reduce.
Conflict in state 39 between rule 20 and token EQUALS resolved as reduce.
Conflict in state 39 between rule 20 and token NE resolved as reduce.
Conflict in state 39 between rule 20 and token '>' resolved as reduce.
Conflict in state 39 between rule 20 and token '<' resolved as reduce.
Conflict in state 39 between rule 20 and token '+' resolved as shift.
Conflict in state 39 between rule 20 and token '-' resolved as shift.
Conflict in state 39 between rule 20 and token '*' resolved as shift.
Conflict in state 39 between rule 20 and token '/' resolved as shift.
Conflict in state 40 between rule 19 and token AND resolved as reduce.
Conflict in state 40 between rule 19 and token OR resolved as reduce.
Conflict in state 40 between rule 19 and token GE resolved as reduce.
Conflict in state 40 between rule 19 and token LE resolved as reduce.
Conflict in state 40 between rule 19 and token EQUALS resolved as reduce.
Conflict in state 40 between rule 19 and token NE resolved as reduce.
Conflict in state 40 between rule 19 and token '>' resolved as reduce.
Conflict in state 40 between rule 19 and token '<' resolved as reduce.
Conflict in state 40 between rule 19 and token '+' resolved as shift.
Conflict in state 40 between rule 19 and token '-' resolved as shift.
Conflict in state 40 between rule 19 and token '*' resolved as shift.
Conflict in state 40 between rule 19 and token '/' resolved as shift.
Conflict in state 41 between rule 15 and token AND resolved as reduce.
Conflict in state 41 between rule 15 and token OR resolved as reduce.
Conflict in state 41 between rule 15 and token GE resolved as reduce.
Conflict in state 41 between rule 15 and token LE resolved as reduce.
Conflict in state 41 between rule 15 and token EQUALS resolved as reduce.
Conflict in state 41 between rule 15 and token NE resolved as reduce.
Conflict in state 41 between rule 15 and token '>' resolved as reduce.
Conflict in state 41 between rule 15 and token '<' resolved as reduce.
Conflict in state 41 between rule 15 and token '+' resolved as reduce.
Conflict in state 41 between rule 15 and token '-' resolved as reduce.
Conflict in state 41 between rule 15 and token '*' resolved as shift.
Conflict in state 41 between rule 15 and token '/' resolved as shift.
Conflict in state 42 between rule 16 and token AND resolved as reduce.
Conflict in state 42 between rule 16 and token OR resolved as reduce.
Conflict in state 42 between rule 16 and token GE resolved as reduce.
Conflict in state 42 between rule 16 and token LE resolved as reduce.
Conflict in state 42 between rule 16 and token EQUALS resolved as reduce.
Conflict in state 42 between rule 16 and token NE resolved as reduce.
Conflict in state 42 between rule 16 and token '>' resolved as reduce.
Conflict in state 42 between rule 16 and token '<' resolved as reduce.
Conflict in state 42 between rule 16 and token '+' resolved as reduce.
Conflict in state 42 between rule 16 and token '-' resolved as reduce.
Conflict in state 42 between rule 16 and token '*' resolved as shift.
Conflict in state 42 between rule 16 and token '/' resolved as shift.
Conflict in state 43 between rule 17 and token AND resolved as reduce.
Conflict in state 43 between rule 17 and token OR resolved as reduce.
Conflict in state 43 between rule 17 and token GE resolved as reduce.
Conflict in state 43 between rule 17 and token LE resolved as reduce.
Conflict in state 43 between rule 17 and token EQUALS resolved as reduce.
Conflict in state 43 between rule 17 and token NE resolved as reduce.
Conflict in state 43 between rule 17 and token '>' resolved as reduce.
Conflict in state 43 between rule 17 and token '<' resolved as reduce.
Conflict in state 43 between rule 17 and token '+' resolved as reduce.
Conflict in state 43 between rule 17 and token '-' resolved as reduce.
Conflict in state 43 between rule 17 and token '*' resolved as reduce.
Conflict in state 43 between rule 17 and token '/' resolved as reduce.
Conflict in state 44 between rule 18 and token AND resolved as reduce.
Conflict in state 44 between rule 18 and token OR resolved as reduce.
Conflict in state 44 between rule 18 and token GE resolved as reduce.
Conflict in state 44 between rule 18 and token LE resolved as reduce.
Conflict in state 44 between rule 18 and token EQUALS resolved as reduce.
Conflict in state 44 between rule 18 and token NE resolved as reduce.
Conflict in state 44 between rule 18 and token '>' resolved as reduce.
Conflict in state 44 between rule 18 and token '<' resolved as reduce.
Conflict in state 44 between rule 18 and token '+' resolved as reduce.
Conflict in state 44 between rule 18 and token '-' resolved as reduce.
Conflict in state 44 between rule 18 and token '*' resolved as reduce.
Conflict in state 44 between rule 18 and token '/' resolved as reduce.
State 4 contains 1 shift/reduce conflict.
State 9 contains 1 shift/reduce conflict.

Grammar
rule 1    function -> function stmt
rule 2    function ->		/* empty */
rule 3    stmt -> expr
rule 4    stmt -> expr '=' expr
rule 5    parm_list -> expr
rule 6    parm_list -> parm_list ',' expr
rule 7    parm_list ->		/* empty */
rule 8    expr -> NUMBER
rule 9    expr -> STRING
rule 10   expr -> IDENTIFIER
rule 11   expr -> IDENTIFIER '(' parm_list ')'
rule 12   expr -> IDENTIFIER '[' expr ']' '.' IDENTIFIER
rule 13   expr -> IDENTIFIER '[' expr ']'
rule 14   expr -> '-' expr
rule 15   expr -> expr '+' expr
rule 16   expr -> expr '-' expr
rule 17   expr -> expr '*' expr
rule 18   expr -> expr '/' expr
rule 19   expr -> expr '<' expr
rule 20   expr -> expr '>' expr
rule 21   expr -> expr GE expr
rule 22   expr -> expr LE expr
rule 23   expr -> expr NE expr
rule 24   expr -> expr EQUALS expr
rule 25   expr -> expr OR expr
rule 26   expr -> expr AND expr
rule 27   expr -> '!' expr
rule 28   expr -> '(' expr ')'

Terminals, with rules where they appear

$ (-1)
'!' (33) 27
'(' (40) 11 28
')' (41) 11 28
'*' (42) 17
'+' (43) 15
',' (44) 6
'-' (45) 14 16
'.' (46) 12
'/' (47) 18
'<' (60) 19
'=' (61) 4
'>' (62) 20
'[' (91) 12 13
']' (93) 12 13
error (256)
NUMBER (258) 8
STRING (259) 9
IDENTIFIER (260) 10 11 12 13
PROCEDURE (261)
AND (262) 26
OR (263) 25
GE (264) 21
LE (265) 22
EQUALS (266) 24
NE (267) 23
DOT_IDENTIFIER (268)
UMINUS (270)

Nonterminals, with rules where they appear

function (29)
    on left: 1 2, on right: 1
stmt (30)
    on left: 3 4, on right: 1
parm_list (31)
    on left: 5 6 7, on right: 6 11
expr (32)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
    27 28, on right: 3 4 5 6 12 13 14 15 16 17 18 19 20 21 22 23 24
    25 26 27 28


state 0

    $default	reduce using rule 2 (function)

    function	go to state 1



state 1

    function  ->  function . stmt   (rule 1)

    $   	go to state 51
    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    stmt	go to state 8
    expr	go to state 9



state 2

    expr  ->  NUMBER .   (rule 8)

    $default	reduce using rule 8 (expr)



state 3

    expr  ->  STRING .   (rule 9)

    $default	reduce using rule 9 (expr)



state 4

    expr  ->  IDENTIFIER .   (rule 10)
    expr  ->  IDENTIFIER . '(' parm_list ')'   (rule 11)
    expr  ->  IDENTIFIER . '[' expr ']' '.' IDENTIFIER   (rule 12)
    expr  ->  IDENTIFIER . '[' expr ']'   (rule 13)

    '(' 	shift, and go to state 10
    '[' 	shift, and go to state 11

    '(' 	[reduce using rule 10 (expr)]
    $default	reduce using rule 10 (expr)



state 5

    expr  ->  '-' . expr   (rule 14)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 12



state 6

    expr  ->  '!' . expr   (rule 27)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 13



state 7

    expr  ->  '(' . expr ')'   (rule 28)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 14



state 8

    function  ->  function stmt .   (rule 1)

    $default	reduce using rule 1 (function)



state 9

    stmt  ->  expr .   (rule 3)
    stmt  ->  expr . '=' expr   (rule 4)
    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '=' 	shift, and go to state 15
    AND 	shift, and go to state 16
    OR  	shift, and go to state 17
    GE  	shift, and go to state 18
    LE  	shift, and go to state 19
    EQUALS	shift, and go to state 20
    NE  	shift, and go to state 21
    '>' 	shift, and go to state 22
    '<' 	shift, and go to state 23
    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    '-' 	[reduce using rule 3 (stmt)]
    $default	reduce using rule 3 (stmt)



state 10

    expr  ->  IDENTIFIER '(' . parm_list ')'   (rule 11)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    $default	reduce using rule 7 (parm_list)

    parm_list	go to state 28
    expr	go to state 29



state 11

    expr  ->  IDENTIFIER '[' . expr ']' '.' IDENTIFIER   (rule 12)
    expr  ->  IDENTIFIER '[' . expr ']'   (rule 13)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 30



state 12

    expr  ->  '-' expr .   (rule 14)
    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)


    $default	reduce using rule 14 (expr)



state 13

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)
    expr  ->  '!' expr .   (rule 27)


    $default	reduce using rule 27 (expr)



state 14

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)
    expr  ->  '(' expr . ')'   (rule 28)

    AND 	shift, and go to state 16
    OR  	shift, and go to state 17
    GE  	shift, and go to state 18
    LE  	shift, and go to state 19
    EQUALS	shift, and go to state 20
    NE  	shift, and go to state 21
    '>' 	shift, and go to state 22
    '<' 	shift, and go to state 23
    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27
    ')' 	shift, and go to state 31



state 15

    stmt  ->  expr '=' . expr   (rule 4)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 32



state 16

    expr  ->  expr AND . expr   (rule 26)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 33



state 17

    expr  ->  expr OR . expr   (rule 25)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 34



state 18

    expr  ->  expr GE . expr   (rule 21)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 35



state 19

    expr  ->  expr LE . expr   (rule 22)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 36



state 20

    expr  ->  expr EQUALS . expr   (rule 24)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 37



state 21

    expr  ->  expr NE . expr   (rule 23)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 38



state 22

    expr  ->  expr '>' . expr   (rule 20)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 39



state 23

    expr  ->  expr '<' . expr   (rule 19)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 40



state 24

    expr  ->  expr '+' . expr   (rule 15)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 41



state 25

    expr  ->  expr '-' . expr   (rule 16)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 42



state 26

    expr  ->  expr '*' . expr   (rule 17)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 43



state 27

    expr  ->  expr '/' . expr   (rule 18)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 44



state 28

    parm_list  ->  parm_list . ',' expr   (rule 6)
    expr  ->  IDENTIFIER '(' parm_list . ')'   (rule 11)

    ',' 	shift, and go to state 45
    ')' 	shift, and go to state 46



state 29

    parm_list  ->  expr .   (rule 5)
    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    AND 	shift, and go to state 16
    OR  	shift, and go to state 17
    GE  	shift, and go to state 18
    LE  	shift, and go to state 19
    EQUALS	shift, and go to state 20
    NE  	shift, and go to state 21
    '>' 	shift, and go to state 22
    '<' 	shift, and go to state 23
    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 5 (parm_list)



state 30

    expr  ->  IDENTIFIER '[' expr . ']' '.' IDENTIFIER   (rule 12)
    expr  ->  IDENTIFIER '[' expr . ']'   (rule 13)
    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    AND 	shift, and go to state 16
    OR  	shift, and go to state 17
    GE  	shift, and go to state 18
    LE  	shift, and go to state 19
    EQUALS	shift, and go to state 20
    NE  	shift, and go to state 21
    '>' 	shift, and go to state 22
    '<' 	shift, and go to state 23
    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27
    ']' 	shift, and go to state 47



state 31

    expr  ->  '(' expr ')' .   (rule 28)

    $default	reduce using rule 28 (expr)



state 32

    stmt  ->  expr '=' expr .   (rule 4)
    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    AND 	shift, and go to state 16
    OR  	shift, and go to state 17
    GE  	shift, and go to state 18
    LE  	shift, and go to state 19
    EQUALS	shift, and go to state 20
    NE  	shift, and go to state 21
    '>' 	shift, and go to state 22
    '<' 	shift, and go to state 23
    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 4 (stmt)



state 33

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)
    expr  ->  expr AND expr .   (rule 26)

    GE  	shift, and go to state 18
    LE  	shift, and go to state 19
    EQUALS	shift, and go to state 20
    NE  	shift, and go to state 21
    '>' 	shift, and go to state 22
    '<' 	shift, and go to state 23
    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 26 (expr)



state 34

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr OR expr .   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    GE  	shift, and go to state 18
    LE  	shift, and go to state 19
    EQUALS	shift, and go to state 20
    NE  	shift, and go to state 21
    '>' 	shift, and go to state 22
    '<' 	shift, and go to state 23
    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 25 (expr)



state 35

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr GE expr .   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 21 (expr)



state 36

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr LE expr .   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 22 (expr)



state 37

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr EQUALS expr .   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 24 (expr)



state 38

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr NE expr .   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 23 (expr)



state 39

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr '>' expr .   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 20 (expr)



state 40

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr '<' expr .   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 19 (expr)



state 41

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr '+' expr .   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 15 (expr)



state 42

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr '-' expr .   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 16 (expr)



state 43

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr '*' expr .   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)


    $default	reduce using rule 17 (expr)



state 44

    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr '/' expr .   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)


    $default	reduce using rule 18 (expr)



state 45

    parm_list  ->  parm_list ',' . expr   (rule 6)

    NUMBER	shift, and go to state 2
    STRING	shift, and go to state 3
    IDENTIFIER	shift, and go to state 4
    '-' 	shift, and go to state 5
    '!' 	shift, and go to state 6
    '(' 	shift, and go to state 7

    expr	go to state 48



state 46

    expr  ->  IDENTIFIER '(' parm_list ')' .   (rule 11)

    $default	reduce using rule 11 (expr)



state 47

    expr  ->  IDENTIFIER '[' expr ']' . '.' IDENTIFIER   (rule 12)
    expr  ->  IDENTIFIER '[' expr ']' .   (rule 13)

    '.' 	shift, and go to state 49

    $default	reduce using rule 13 (expr)



state 48

    parm_list  ->  parm_list ',' expr .   (rule 6)
    expr  ->  expr . '+' expr   (rule 15)
    expr  ->  expr . '-' expr   (rule 16)
    expr  ->  expr . '*' expr   (rule 17)
    expr  ->  expr . '/' expr   (rule 18)
    expr  ->  expr . '<' expr   (rule 19)
    expr  ->  expr . '>' expr   (rule 20)
    expr  ->  expr . GE expr   (rule 21)
    expr  ->  expr . LE expr   (rule 22)
    expr  ->  expr . NE expr   (rule 23)
    expr  ->  expr . EQUALS expr   (rule 24)
    expr  ->  expr . OR expr   (rule 25)
    expr  ->  expr . AND expr   (rule 26)

    AND 	shift, and go to state 16
    OR  	shift, and go to state 17
    GE  	shift, and go to state 18
    LE  	shift, and go to state 19
    EQUALS	shift, and go to state 20
    NE  	shift, and go to state 21
    '>' 	shift, and go to state 22
    '<' 	shift, and go to state 23
    '+' 	shift, and go to state 24
    '-' 	shift, and go to state 25
    '*' 	shift, and go to state 26
    '/' 	shift, and go to state 27

    $default	reduce using rule 6 (parm_list)



state 49

    expr  ->  IDENTIFIER '[' expr ']' '.' . IDENTIFIER   (rule 12)

    IDENTIFIER	shift, and go to state 50



state 50

    expr  ->  IDENTIFIER '[' expr ']' '.' IDENTIFIER .   (rule 12)

    $default	reduce using rule 12 (expr)



state 51

    $   	go to state 52



state 52

    $default	accept
